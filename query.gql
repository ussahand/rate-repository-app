query{
  users {
    edges {
      node {
        username
      }
    }
  }
  me {
    id username
  }
}

query Node {
  repositories {
    edges {
      node {
        ownerName
        name
      }
    }
  }
}

query Node($orderBy: AllRepositoriesOrderBy, $orderDirection: OrderDirection) {
  repositories(orderBy: $orderBy, orderDirection: $orderDirection) {
    edges {
      node {
        id
        name
        fullName
        reviews { totalCount }
        description
      }
    }
  }
}

query($repositoryId: ID!) {
  repository(id: $repositoryId) {
    id fullName description url
  }
}

{
  repository(id: "jaredpalmer.formik") {
    id
    fullName
    reviews {
      edges {
        node {
          id
          text
          rating
          createdAt
          user {
            id
            username
          }
        }
      }
    }
  }
}
mutation Authenticate($credentials: AuthenticateInput) {
  authenticate(credentials: $credentials) {
    accessToken
    user { username }
  }
}

mutation Signup($credentials: CreateUserInput) {
  createUser(user: $credentials) {
    username, reviews {
      totalCount
    }
  }
}

mutation CreateReview($review: CreateReviewInput) {
  createReview(review: $review) {
    rating
    createdAt
    text
    id
  }
}

query Node($orderBy: AllRepositoriesOrderBy, $orderDirection: OrderDirection) {
  repositories(first: 4, orderBy: $orderBy, orderDirection: $orderDirection,after:"") {
    totalCount
    edges {
      node {
        id
        fullName
        createdAt
        ownerName
        name
      }
      cursor
    }
    pageInfo {
      endCursor
      startCursor
      hasNextPage
    }
  }
}


  query {
    me{ 
      username
      reviews {
        totalCount
        edges {
          node {
            id
            text
            rating
            createdAt   
            repositoryId     

          }
          cursor
        }
        pageInfo {
          endCursor
          startCursor
          hasNextPage
        }
      }
    }
}

  query getCurrentUser($includeReviews: Boolean = true, $firstin:Int=20) {
    me {
      username
      id
      reviews(first: $firstin) @include(if: $includeReviews) {
        totalCount
        edges {
          node {
            id
            repository {
              fullName
              id
            }
            text
            rating
            createdAt  
            repositoryId 
          }
          cursor
        }
        pageInfo {
                    endCursor
          startCursor
          hasNextPage
        }
      }
    }
  }


mutation Mutation($deleteReviewId: ID!) {
  deleteReview(id: $deleteReviewId)
}
//------------------------------------------------------
variables:

{  
  "credentials": {
    "username": "jack3",
    "password": "123456"
  },
"repositoryId": "async-library.react-async",
"review": {
  "repositoryName": "formik",
  "ownerName": "jaredpalmer",
  "rating": 80,
  "text": "for test"
},
"orderBy": "CREATED_AT",
"orderDirection": "DESC",
"deleteReviewId": null
}

//----------------------------------------------------
Headers:
Authorization : bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4MTNkYjQ5My1lM2IyLTQ5YzctODY0Yi1mMjVmYzJhOWNlYmYiLCJpYXQiOjE2NjM3NTA1MTcsImV4cCI6MjI2ODU1MDUxNywic3ViIjoiYWNjZXNzVG9rZW4ifQ.WCRCwmqfufwlmAZlM9aUhtzwZeRrJcI-R9N8XQYRzRU

 


